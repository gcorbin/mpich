{
    "$^ Notes:": [
        "Strings starting with '$^' will be treated as comments.",
        "Tests matching at least one of the criteria in one of the categories below will be excluded from the filtered testlist.",
        "For each category, a list of regex patterns can be supplied as exclude criteria."
    ],
    "exe-name": [
        "$^ Match the path of the test executable relative to the top test directory against these patterns:",
        "$^ Tests in ./errors can be incorrect MPI programs.",
        "$^ In some cases this results in critical errors in Score-P (e.g. invalid memory).",
        "^./errors/comm/cfree",
        "^./errors/comm/comm_create_group_nullarg",
        "^./errors/comm/comm_create_nullarg",
        "^./errors/comm/comm_split_nullarg",
        "^./errors/comm/comm_split_type_nullarg",
        "^./errors/group/group_difference_nullarg",
        "^./errors/group/group_intersection_nullarg",
        "^./errors/group/group_range_excl_nullarg",
        "^./errors/group/group_range_incl_nullarg",
        "^./errors/group/group_union_nullarg",
        "^./errors/rma/win_sync_complete",
        "^./errors/rma/win_sync_free_at",
        "^./errors/rma/win_sync_free_pt"
    ],
    "list-entry": [
        "$^ Match the entire line in the testlist against these patterns:",
        "xfail=ticket\\d+", "$^ The xfail option is not honored by runtests if the --enable-strictmpi option was given to configure. These are tests that are expected to fail with MPICH.",
        "resultTest=", "$^ Tests with the resultTest option are not supported in runtests --batch. Exclude them here to maintain consistent test counts."
    ],
    "source-name": [
        "$^ Match the name of each source file of the test against these patterns:"
    ],
    "source-contents": [
        "$^ Match each line of each source file of the test against these patterns",
        "(?i)Intercomm", "$^ Score-P does not support MPI Intercomms in any way. This broad pattern will also exclude calls to MTest_Intercomm_xxx.",
        "(?i)MPI_Comm_Spawn", "$^ Spawn requires Intercomm support",
        "(?i)MPI_Session", "$^ Score-P does not support MPI_Session.",
        "(?i)MPI_Comm_idup_with_info", "$^ Not supported, will result in untracked communicators"
    ]
}
