import re


def read_sources_from_makefile(makefile):
    """
    Parse a Makefile in a very primitive manner to get a list of sources for each of the executable targets.

    Assumptions:
    - The Makefile was generated by automake (sources for some target are listed as target_SOURCES)
    - Lists of sources do not contain variables (Each entry is interpreted as the name of a source,
        variables will not be expanded further)
    - Continuation lines in source lists are allowed.
    :param makefile: Relative path to a makefile
    :return: A mapping from executables to lists of source file names.
    """
    sources = {}
    with open(makefile, 'r') as file:
        continue_previous_line = False
        last_exe = ''
        for line in file:
            # Will this line be continued?
            m = re.match(r'(.*)\\', line)
            if m:
                line = m.group(1)
                found_continuation_mark = True
            else:
                found_continuation_mark = False

            # Is this line a continuation of the previous line?
            if continue_previous_line:
                sources[last_exe].extend(line.split())
                continue_previous_line = found_continuation_mark
                continue

            continue_previous_line = False
            # target_SOURCES= source1.c source2.c\
            # source3.c
            m = re.match(r'^\s*(\w+)_SOURCES\s*=(.*)', line)
            if m:
                last_exe = m.group(1)
                sources[last_exe] = m.group(2).split()
                continue_previous_line = found_continuation_mark
    return sources
